import { jsPDF } from 'jspdf'

type PoItem = { name: string; qty: number; unitCostCents: number }
type PoData = {
  id: string
  vendorName: string
  expectedAt?: string
  status?: string
  items: PoItem[]
}

export function generatePoPdf(po: PoData) {
  const doc = new jsPDF()
  const toDollars = (cents: number) => (cents / 100).toFixed(2)

  const page = { w: 210, h: 297, margin: 14 }
  let y = page.margin

  doc.setFontSize(16)
  doc.text(`Purchase Order #${po.id}`, page.margin, y)
  y += 8

  doc.setFontSize(11)
  doc.text(`Vendor: ${po.vendorName}`, page.margin, y)
  y += 6

  if (po.expectedAt) { doc.text(`Expected: ${po.expectedAt}`, page.margin, y); y += 6 }
  if (po.status) { doc.text(`Status: ${po.status}`, page.margin, y); y += 8 }

  y += 2
  doc.setFontSize(12)
  doc.text('Items', page.margin, y)
  y += 6

  doc.setFontSize(10)
  doc.setFont('helvetica', 'bold')
  const col = { name: page.margin, qty: 110, unit: 140, total: 170 }
  doc.text('Name', col.name, y)
  doc.text('Qty', col.qty, y)
  doc.text('Unit', col.unit, y)
  doc.text('Total', col.total, y)
  y += 5
  doc.setFont('helvetica', 'normal')

  let grand = 0
  const wrapWidth = 92
  for (const it of po.items) {
    const lineTotal = it.qty * it.unitCostCents
    grand += lineTotal

    const lines = doc.splitTextToSize(it.name || '', wrapWidth)
    const lineHeight = 5

    doc.text(String(lines[0] ?? ''), col.name, y)
    doc.text(String(it.qty), col.qty, y, { align: 'left' })
    doc.text(`$${toDollars(it.unitCostCents)}`, col.unit, y, { align: 'left' })
    doc.text(`$${toDollars(lineTotal)}`, col.total, y, { align: 'left' })
    y += lineHeight

    for (let i = 1; i < lines.length; i++) {
      if (y > page.h - page.margin) { doc.addPage(); y = page.margin }
      doc.text(String(lines[i]), col.name, y)
      y += lineHeight
    }

    if (y > page.h - page.margin) { doc.addPage(); y = page.margin }
  }

  y += 4
  if (y > page.h - page.margin) { doc.addPage(); y = page.margin }
  doc.setFont('helvetica', 'bold')
  doc.setFontSize(12)
  doc.text(`Total: $${toDollars(grand)}`, page.margin, y)

  y += 10
  doc.setFont('helvetica', 'normal')
  doc.setFontSize(8)
  doc.text('Generated by ERP', page.margin, y)

  return doc.output('arraybuffer')
}
